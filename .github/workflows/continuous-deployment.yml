name: Continuous Integration and Delivery with Github Actions

on:
  push:
    branches:
      - "main"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN}}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Setup Java 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'adopt'
        cache: maven

    - name: Build Application .jar
      working-directory: ./30_ContinuousIntegrationWithAWS/rest-with-spring-boot-and-java-erudio
      run: mvn clean package

    - name: Docker Compose Build
      working-directory: ./30_ContinuousIntegrationWithAWS
      run: docker compose build

    - name: Tag and Push Docker Image to Amazon Container Registry - ECR
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.IMAGE_REPO_URL }}:latest
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        
        docker push ${{ secrets.IMAGE_REPO_URL }}:latest
        docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ secrets.IMAGE_REPO_URL }}:latest

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.SERVICE_NAME }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{ github.run_id }}
        
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{ github.run_id }}